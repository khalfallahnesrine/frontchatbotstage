{"ast":null,"code":"var _jsxFileName = \"C:\\\\Webbstage\\\\Chatbotstage\\\\generateurchatbot\\\\src\\\\pages\\\\chatupdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/chatpage.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Sidebar from '../components/Sidebar';\nimport Logo from '../assets/cha (2).png';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatupdate(props) {\n  _s();\n  const {\n    chatbotsId\n  } = useParams();\n  console.log(\"chatbotsId:\", chatbotsId);\n  const [chatbotData, setChatbotData] = useState({});\n  const [chatbotname, setChatbotname] = useState(\"\");\n  const [chatbotnamecolor, setChatbotnamecolor] = useState(\"\");\n  const [headerColor, setheaderColor] = useState(\"\");\n  const [bodyColor, setbodyColor] = useState(\"\");\n  const [initialPrompt, setInitialPrompt] = useState('');\n  const [senderColor, setSenderColor] = useState(\"\");\n  const [chatbotmsgColor, setChatbotmsgColor] = useState(\"\");\n  const [logoSrc, setLogoSrc] = useState(\"\");\n  const [isChatOpen, setIsChatOpen] = useState(true);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userPrompt, setUserPrompt] = useState('');\n  const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\n  function isColorDark(color) {\n    // Convert color to RGB\n    const rgb = parseInt(color.slice(1), 16);\n    const r = rgb >> 16 & 0xff;\n    const g = rgb >> 8 & 0xff;\n    const b = rgb >> 0 & 0xff;\n\n    // Calculate luminance\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\n\n    // Return true if luminance is below a certain threshold, indicating a dark color\n    return luminance < 128;\n  }\n  const textColoruser = isColorDark(senderColor) ? 'white' : 'black';\n  const textColorchatbot = isColorDark(chatbotmsgColor) ? 'white' : 'black';\n  const navigate = useNavigate();\n  const handleUpdate = async () => {\n    try {\n      const formDatachat = {\n        name: chatbotname,\n        prompt: initialPrompt,\n        senderColor: senderColor,\n        chatbotmsgColor: chatbotmsgColor,\n        headerColor: headerColor,\n        bodyColor: bodyColor,\n        photo_data: logoSrc,\n        nameColor: chatbotnamecolor\n      };\n      const isAuthenticated = localStorage.getItem('token');\n      const headers = {\n        Authorization: `Bearer ${isAuthenticated}`\n      };\n      const response = await axios.put(`http://127.0.0.1:5000/updatechatbot/${chatbotsId}`, formDatachat, {\n        headers: headers\n      });\n      if (response.status === 200) {\n        const {\n          message,\n          chatbot_id\n        } = response.data;\n        console.log('Chatbot updated successfully:', message);\n        console.log('New Chatbot ID:', chatbot_id);\n        navigate(`/Chatpage/${chatbot_id}`);\n      } else {\n        console.log('Unexpected response status:', response.status);\n      }\n      ;\n    } catch (error) {\n      console.error('Error:', error);\n      if (error.response) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            alert(\"Please fill the prompt input to personalize your chatbot!\");\n          } else {\n            alert('failed. Please check your INPUTS.');\n          }\n        }\n      }\n      // Handle the error here\n    }\n  };\n  //const handleUpdate = async (e) => {\n  // e.preventDefault();\n  // try {\n  //  const isAuthenticated = localStorage.getItem('token');\n  // const headers = {\n  //   Authorization: `Bearer ${isAuthenticated}`,\n  // };\n\n  // const response = await axios.put(\n  //  `http://127.0.0.1:5000/updatechatbot/${chatbotsId}`,\n  // formData, \n  //{ headers: headers }\n  // );\n\n  //if (response.status === 200) {\n  // Chatbot updated successfully\n  // console.log('Chatbot updated successfully:', response.data);\n  //navigate(`/Chatpage/${chatbotsId}`);\n  // Handle navigation or display a success message\n  // } else {\n  //  console.log('Unexpected response status:', response.status);\n  // }\n  //}// catch (error) {\n  // //console.error('Error updating chatbot:', error);\n  // // Handle the error here\n  // }\n  // };\n\n  const handleToggleChat = () => {\n    setIsChatOpen(prevState => !prevState);\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newUserMessage = {\n      type: \"user\",\n      message: userPrompt\n    };\n    setChatHistory([...chatHistory, newUserMessage]);\n    setUserPrompt('');\n    fetch(\"/openaires\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: userPrompt\n      })\n    }).then(response => response.json()).then(data => {\n      const newChatEntry = {\n        type: \"user\",\n        message: userPrompt\n      };\n      const newResponseEntry = {\n        type: \"chatbot\",\n        message: data.answer\n      };\n      setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\n      setChatbotResponseReceived(true);\n    });\n    setChatbotResponseReceived(false);\n  };\n  const handleinitprompt = event => {\n    event.preventDefault();\n    fetch(\"/initialpompt\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        initprompt: initialPrompt\n      })\n    }).then(response => response.json());\n  };\n  useEffect(() => {\n    async function fetchChatbotData() {\n      try {\n        const isAuthenticated = localStorage.getItem('token');\n        const headers = {\n          Authorization: `Bearer ${isAuthenticated}`\n        };\n        const response = await axios.get(`http://127.0.0.1:5000/chatbots/${chatbotsId}`, {\n          headers: headers\n        });\n        console.log(\"Fetching chatbot data for ID:\", chatbotsId);\n        const data = response.data;\n        setChatbotData(data);\n        setChatbotname(data.name);\n        setChatbotnamecolor(data.nameColor);\n        setInitialPrompt(data.prompt);\n        setSenderColor(data.senderColor);\n        setChatbotmsgColor(data.chatbotmsgColor);\n        setLogoSrc(data.photo_data);\n        setheaderColor(data.headerColor);\n        setbodyColor(data.bodyColor);\n        // ... set other variables for other data fields\n        try {\n          const initPromptResponse = await fetch(\"/initialpompt\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              initprompt: data.prompt\n            })\n          });\n\n          // Handle initPromptResponse if needed\n          const initPromptData = await initPromptResponse.json();\n          // Do something with initPromptData\n        } catch (error) {\n          console.error('Error sending initial prompt:', error);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchChatbotData();\n  }, [chatbotsId]);\n  const handleTextChange = event => {\n    setChatbotname(event.target.value);\n  };\n  const handleColorChange1 = event => {\n    const newColor1 = event.target.value;\n    setChatbotnamecolor(newColor1);\n  };\n  const handleColorChange2 = event => {\n    const newColor2 = event.target.value;\n    setSenderColor(newColor2);\n  };\n  const handleColorChange3 = event => {\n    const newColor3 = event.target.value;\n    setChatbotmsgColor(newColor3);\n  };\n  const handleColorChange4 = event => {\n    const newColor4 = event.target.value;\n    setheaderColor(newColor4);\n  };\n  const handleColorChange5 = event => {\n    const newColor5 = event.target.value;\n    setbodyColor(newColor5);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setLogoSrc(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        top: '8% ',\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-md mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-outline\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"mt-5\",\n          style: {\n            color: 'white',\n            position: 'absolute',\n            top: '3%',\n            left: '15%',\n            right: '53%'\n          },\n          children: \" Create your own Chatbot now ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid white',\n            padding: '10px',\n            top: ' 15%',\n            left: '15%',\n            position: 'absolute',\n            width: '35%',\n            height: '500px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control form-control-lg\",\n            value: chatbotname,\n            onChange: handleTextChange,\n            placeholder: \"Chatbot name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select your chatbot name color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: chatbotnamecolor,\n              onChange: handleColorChange1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the sender message color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: senderColor,\n              onChange: handleColorChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the chatbot message color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: chatbotmsgColor,\n              onChange: handleColorChange3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the header color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: headerColor,\n              onChange: handleColorChange4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the body color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: bodyColor,\n              onChange: handleColorChange5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 2\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".png,.jpg,.jpeg\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 2\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: initialPrompt,\n            style: {\n              marginTop: \"2%\"\n            },\n            placeholder: \"Chatbot function expl : I want this chatbot understand in....\",\n            className: \"form-control\",\n            id: \"exampleFormControlTextarea1\",\n            rows: \"3\",\n            onChange: e => setInitialPrompt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" btn btn-outline-light\",\n              style: {\n                marginRight: '10px'\n              },\n              onClick: handleinitprompt,\n              title: \"By clicking on this button, the chatbot next to you will operate according to the specifications you've provided in the text. You can test and make changes on it as needed. Once everything is confirmed, you can click on 'Generate chatbot response' to finalize and create your chatbot\",\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" btn btn-outline-light\",\n              onClick: handleUpdate,\n              title: \"This is the final step! By clicking on this button, you will have your own chatbot with all the information accurately set. Please ensure that all the information is correct before proceeding.\",\n              children: \"Update chatbot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 2\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container py-5 \",\n      style: {\n        position: 'absolute',\n        marginLeft: '60%',\n        marginTop: '5.8%',\n        maxWidth: '1500%',\n        maxHeight: '400px',\n        fontSize: '120%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row d-flex justify-content-center\",\n        className: isChatOpen ? 'chat-container' : 'chat-container minimized',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-8 col-lg-6 col-xl-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            id: \"chat1\",\n            style: {\n              borderRadius: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\",\n              style: {\n                backgroundColor: headerColor\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-angle-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mb-0 fw-bold\",\n                style: {\n                  color: chatbotnamecolor\n                },\n                children: [chatbotname, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn-close \",\n                \"aria-label\": \"Close\",\n                onClick: handleToggleChat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              style: {\n                backgroundColor: bodyColor\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"chat-messages\",\n                style: {\n                  maxHeight: '225px',\n                  height: '225px',\n                  overflowY: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-start mb-4\",\n                  children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: logoSrc,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: ' 30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 11\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No logo selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 140\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-3\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: chatbotmsgColor,\n                      color: 'white'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      style: {\n                        color: textColorchatbot\n                      },\n                      children: \"Hello, Please start the changes to create your own chatbot.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-end mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-6\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: senderColor\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      style: {\n                        color: textColoruser\n                      },\n                      children: \"This is the sender message \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: Logo,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: '30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-start mb-4\",\n                  children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: logoSrc,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: ' 30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 11\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No logo selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 140\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-6\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: chatbotmsgColor,\n                      color: textColorchatbot\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      children: \"this is your chatbot messsage \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 12\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"ms-3\",\n                    style: {\n                      borderradius: '15px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"bg-image\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"#!\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"mask\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 340,\n                          columnNumber: 19\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 339,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 338,\n                      columnNumber: 15\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"responseDiv\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"chat-messages\",\n                    style: {\n                      maxHeight: '225px'\n                    },\n                    children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [entry.type === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"d-flex flex-row justify-content-end mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            borderRadius: '15px',\n                            backgroundColor: senderColor,\n                            color: textColoruser,\n                            marginRight: '2px'\n                          },\n                          className: \"message user\",\n                          children: entry.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 352,\n                          columnNumber: 7\n                        }, this), logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: \"rounded-circle bg-outline-light logo\",\n                          src: logoSrc,\n                          alt: \"avatar 1\",\n                          style: {\n                            width: ' 30px',\n                            height: '100%',\n                            left: '2px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 7\n                        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"No logo selected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 355,\n                          columnNumber: 148\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"ms-3\",\n                          style: {\n                            borderradius: '15px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            class: \"bg-image\",\n                            children: /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"#!\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                class: \"mask\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 361,\n                                columnNumber: 13\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 360,\n                              columnNumber: 11\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 359,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 358,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 350,\n                        columnNumber: 5\n                      }, this), entry.type === \"chatbot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"d-flex flex-row justify-content-start mb-4\",\n                        children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: \"rounded-circle bg-outline-light logo\",\n                          src: logoSrc,\n                          alt: \"avatar 1\",\n                          style: {\n                            width: ' 30px',\n                            height: '100%'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 371,\n                          columnNumber: 7\n                        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"No logo selected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 371,\n                          columnNumber: 136\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            borderRadius: '15px',\n                            backgroundColor: chatbotmsgColor,\n                            color: textColorchatbot\n                          },\n                          className: \"message chatbot\",\n                          children: entry.message.split('<br>').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: line\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 375,\n                            columnNumber: 5\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 373,\n                          columnNumber: 7\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"ms-3\",\n                          style: {\n                            borderradius: '15px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            class: \"bg-image\",\n                            children: /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"#!\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                class: \"mask\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 383,\n                                columnNumber: 13\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 382,\n                              columnNumber: 11\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 381,\n                            columnNumber: 9\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 380,\n                          columnNumber: 7\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 369,\n                        columnNumber: 5\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 348,\n                      columnNumber: 1\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 12\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-outline\",\n                children: [chatHistory.length > 0 && !chatbotResponseReceived && /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-outline-dark\",\n                  id: \"receive-response-button\",\n                  type: \"button\",\n                  onClick: handleFormSubmit,\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  disabled: true,\n                  children: \"Response ...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 3\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  class: \"form-control\",\n                  id: \"userPrompt\",\n                  value: userPrompt,\n                  onChange: e => setUserPrompt(e.target.value),\n                  rows: \"4\",\n                  placeholder: \"Type your message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"input-group-append\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn btn-outline-dark\",\n                    id: \"gpt-button\",\n                    type: \"button\",\n                    onClick: handleFormSubmit,\n                    children: \"Ask Chatbot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatupdate, \"WX8HuTojYQ8r4TLHbr2FsdQ9qvs=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Chatupdate;\nexport default Chatupdate;\nvar _c;\n$RefreshReg$(_c, \"Chatupdate\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","Sidebar","Logo","useNavigate","jsxDEV","_jsxDEV","Chatupdate","props","_s","chatbotsId","console","log","chatbotData","setChatbotData","chatbotname","setChatbotname","chatbotnamecolor","setChatbotnamecolor","headerColor","setheaderColor","bodyColor","setbodyColor","initialPrompt","setInitialPrompt","senderColor","setSenderColor","chatbotmsgColor","setChatbotmsgColor","logoSrc","setLogoSrc","isChatOpen","setIsChatOpen","chatHistory","setChatHistory","userPrompt","setUserPrompt","chatbotResponseReceived","setChatbotResponseReceived","isColorDark","color","rgb","parseInt","slice","r","g","b","luminance","textColoruser","textColorchatbot","navigate","handleUpdate","formDatachat","name","prompt","photo_data","nameColor","isAuthenticated","localStorage","getItem","headers","Authorization","response","put","status","message","chatbot_id","data","error","alert","handleToggleChat","prevState","handleFormSubmit","event","preventDefault","newUserMessage","type","fetch","method","body","JSON","stringify","then","json","newChatEntry","newResponseEntry","answer","handleinitprompt","initprompt","fetchChatbotData","get","initPromptResponse","initPromptData","handleTextChange","target","value","handleColorChange1","newColor1","handleColorChange2","newColor2","handleColorChange3","newColor3","handleColorChange4","newColor4","handleColorChange5","newColor5","handleFileChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","className","children","style","top","position","fileName","_jsxFileName","lineNumber","columnNumber","class","left","right","border","padding","width","height","onChange","placeholder","marginTop","marginRight","accept","id","rows","e","onClick","title","marginLeft","maxWidth","maxHeight","fontSize","borderRadius","backgroundColor","overflowY","src","alt","borderradius","href","map","entry","index","split","line","length","marginBottom","disabled","_c","$RefreshReg$"],"sources":["C:/Webbstage/Chatbotstage/generateurchatbot/src/pages/chatupdate.js"],"sourcesContent":["import React , { useState, useEffect } from 'react'\r\nimport '../styles/chatpage.css'\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport Sidebar from '../components/Sidebar'\r\nimport Logo from '../assets/cha (2).png'\r\nimport { useNavigate } from 'react-router-dom';\r\nfunction Chatupdate(props) {\r\n  const { chatbotsId } = useParams();\r\n  console.log(\"chatbotsId:\", chatbotsId); \r\n  const [chatbotData, setChatbotData] = useState({});\r\n  const [chatbotname, setChatbotname] = useState(\"\");\r\n  const [chatbotnamecolor, setChatbotnamecolor] = useState(\"\");\r\n  const [headerColor, setheaderColor] = useState(\"\");\r\n  const [bodyColor, setbodyColor] = useState(\"\");\r\n  const [initialPrompt, setInitialPrompt] = useState('');\r\n  const [senderColor, setSenderColor] = useState(\"\");\r\n  const [chatbotmsgColor, setChatbotmsgColor] = useState(\"\");\r\n  const [logoSrc, setLogoSrc] = useState(\"\");\r\n  const [isChatOpen, setIsChatOpen] = useState(true);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userPrompt, setUserPrompt] = useState('');\r\n  const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\r\n  function isColorDark(color) {\r\n    // Convert color to RGB\r\n    const rgb = parseInt(color.slice(1), 16);\r\n    const r = (rgb >> 16) & 0xff;\r\n    const g = (rgb >>  8) & 0xff;\r\n    const b = (rgb >>  0) & 0xff;\r\n  \r\n    // Calculate luminance\r\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n  \r\n    // Return true if luminance is below a certain threshold, indicating a dark color\r\n    return luminance < 128;\r\n  }\r\n  const textColoruser = isColorDark(senderColor) ? 'white' : 'black';\r\n  const textColorchatbot = isColorDark(chatbotmsgColor) ? 'white' : 'black';\r\n  const navigate = useNavigate();\r\n \r\n  const handleUpdate  = async () => {\r\n    try {\r\n        const formDatachat = {\r\n          \r\n          name: chatbotname,\r\n          prompt: initialPrompt,\r\n          senderColor:senderColor,\r\n          chatbotmsgColor: chatbotmsgColor,\r\n          headerColor: headerColor,\r\n          bodyColor:bodyColor,\r\n          photo_data:logoSrc,\r\n          nameColor:chatbotnamecolor, \r\n  \r\n      };\r\n      const isAuthenticated = localStorage.getItem('token');\r\n      const headers = {\r\n               Authorization: `Bearer ${isAuthenticated}`,\r\n       \r\n    };\r\n    \r\n      \r\n      const response = await axios.put( `http://127.0.0.1:5000/updatechatbot/${chatbotsId}`, formDatachat, {\r\n        headers: headers, });\r\n        if (response.status === 200) {\r\n          const { message, chatbot_id } = response.data;\r\n          console.log('Chatbot updated successfully:', message);\r\n          console.log('New Chatbot ID:', chatbot_id);\r\n          navigate(`/Chatpage/${chatbot_id}`);\r\n        } else {\r\n          console.log('Unexpected response status:', response.status);\r\n        };\r\n    } catch (error) {\r\n     \r\n      console.error('Error:', error);\r\n       if (error.response){  if (error.response) {\r\n        if (error.response.status === 400) {\r\n          alert(\"Please fill the prompt input to personalize your chatbot!\");\r\n        }else {\r\n          alert('failed. Please check your INPUTS.');\r\n        }\r\n\r\n    }}\r\n      // Handle the error here\r\n    }\r\n  };\r\n  //const handleUpdate = async (e) => {\r\n   // e.preventDefault();\r\n   // try {\r\n    //  const isAuthenticated = localStorage.getItem('token');\r\n     // const headers = {\r\n     //   Authorization: `Bearer ${isAuthenticated}`,\r\n     // };\r\n\r\n     // const response = await axios.put(\r\n      //  `http://127.0.0.1:5000/updatechatbot/${chatbotsId}`,\r\n       // formData, \r\n        //{ headers: headers }\r\n     // );\r\n\r\n      //if (response.status === 200) {\r\n        // Chatbot updated successfully\r\n       // console.log('Chatbot updated successfully:', response.data);\r\n        //navigate(`/Chatpage/${chatbotsId}`);\r\n        // Handle navigation or display a success message\r\n     // } else {\r\n      //  console.log('Unexpected response status:', response.status);\r\n     // }\r\n    //}// catch (error) {\r\n     // //console.error('Error updating chatbot:', error);\r\n     // // Handle the error here\r\n   // }\r\n // };\r\n  \r\n  const handleToggleChat = () => {\r\n    setIsChatOpen(prevState => !prevState);\r\n  };\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newUserMessage = {\r\n      type: \"user\",\r\n      message: userPrompt\r\n    };\r\n    setChatHistory([...chatHistory, newUserMessage]);\r\n    setUserPrompt('');\r\n    fetch(\"/openaires\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ prompt: userPrompt })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const newChatEntry = {\r\n          type: \"user\",\r\n          message: userPrompt\r\n        };\r\n        const newResponseEntry = {\r\n          type: \"chatbot\",\r\n          message: data.answer\r\n        };\r\n        setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\r\n        setChatbotResponseReceived(true);\r\n                });\r\n                setChatbotResponseReceived(false);\r\n  };\r\n  const handleinitprompt = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch(\"/initialpompt\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ initprompt: initialPrompt })\r\n    })\r\n      .then(response => response.json())\r\n      \r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchChatbotData() {\r\n        try {\r\n          const isAuthenticated = localStorage.getItem('token');\r\n          const headers = {\r\n                   Authorization: `Bearer ${isAuthenticated}`,\r\n           \r\n        };\r\n        const response = await axios.get(`http://127.0.0.1:5000/chatbots/${chatbotsId}`,  {\r\n          headers: headers, });\r\n          console.log(\"Fetching chatbot data for ID:\", chatbotsId);\r\n            const data = response.data;\r\n\r\n            setChatbotData(data);\r\n            setChatbotname(data.name);\r\n            setChatbotnamecolor(data.nameColor);\r\n            setInitialPrompt(data.prompt);\r\n            setSenderColor(data.senderColor);\r\n            setChatbotmsgColor(data.chatbotmsgColor);\r\n            setLogoSrc(data.photo_data);\r\n            setheaderColor(data.headerColor);\r\n            setbodyColor(data.bodyColor);\r\n            // ... set other variables for other data fields\r\n            try {\r\n              const initPromptResponse = await fetch(\"/initialpompt\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                  \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ initprompt: data.prompt })\r\n              });\r\n    \r\n              // Handle initPromptResponse if needed\r\n              const initPromptData = await initPromptResponse.json();\r\n              // Do something with initPromptData\r\n              \r\n            }\r\n             catch (error) {\r\n              console.error('Error sending initial prompt:', error);\r\n            }\r\n          }\r\n           catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n    fetchChatbotData();\r\n}, [chatbotsId]);\r\nconst handleTextChange = (event) => {\r\n    setChatbotname(event.target.value);\r\n  };\r\n  const handleColorChange1 = (event) => {\r\n    const newColor1 = event.target.value ; \r\n    setChatbotnamecolor(newColor1);\r\n  };\r\n  const handleColorChange2 = (event) => {\r\n    const newColor2 = event.target.value ; \r\n    setSenderColor(newColor2);\r\n  };\r\n  const handleColorChange3 = (event) => {\r\n    const newColor3 = event.target.value ; \r\n    setChatbotmsgColor(newColor3);\r\n  };\r\n  const handleColorChange4 = (event) => {\r\n    const newColor4 = event.target.value ; \r\n    setheaderColor(newColor4);\r\n  };\r\n  const handleColorChange5 = (event) => {\r\n    const  newColor5 =  event.target.value ; \r\n    setbodyColor(newColor5);\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setLogoSrc(reader.result);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"dashboard-container\">\r\n     \r\n    <div  style={{top:'8% '  , position:'absolute'}}><Sidebar/></div>\r\n\r\n<div class=\"col-md mb-4\">\r\n <div   class=\"form-outline\">\r\n <h1 class=\"mt-5\" style={{color : 'white' ,position:'absolute',  top:'3%', left:'15%',right:'53%'}}> Create your own Chatbot now ! </h1>\r\n <div style={{border: '1px solid white',padding :'10px',top:' 15%', left: '15%' ,position:'absolute', width:'35%', height:'500px'}}>\r\n\r\n <input type=\"text\"  class=\"form-control form-control-lg\" value={chatbotname} onChange={handleTextChange}  placeholder='Chatbot name ' />\r\n <div style={{marginTop:\"3%\"}}>\r\n <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select your chatbot name color : </label>\r\n <input type=\"color\"      value={chatbotnamecolor} onChange={handleColorChange1}/></div>\r\n \r\n <div style={{marginTop:\"3%\"}}>\r\n <label className='text text-light ' style={{ marginRight:\"2%\"}} > Select the sender message color : </label>\r\n <input type=\"color\"      value={senderColor} onChange={handleColorChange2}/></div>\r\n <div style={{marginTop:\"3%\"}}>\r\n <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the chatbot message color : </label>\r\n <input type=\"color\"      value={chatbotmsgColor} onChange={handleColorChange3}/></div>\r\n <div style={{marginTop:\"3%\"}}>\r\n <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the header color : </label>\r\n <input type=\"color\"      value={headerColor} onChange={handleColorChange4}/></div>\r\n <div style={{marginTop:\"3%\"}}>\r\n <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the body color : </label>\r\n <input type=\"color\"      value={bodyColor} onChange={handleColorChange5}/></div>\r\n <input type=\"file\" accept=\".png,.jpg,.jpeg\" onChange={handleFileChange} /> \r\n  <br></br>\r\n\r\n  <textarea\r\nvalue={initialPrompt}\r\nstyle={{ marginTop: \"2%\" }}\r\nplaceholder=\"Chatbot function expl : I want this chatbot understand in....\"\r\nclassName=\"form-control\"\r\nid=\"exampleFormControlTextarea1\"\r\nrows=\"3\"\r\nonChange={(e) => setInitialPrompt(e.target.value)}\r\n/><div style ={{marginTop:'10px'}}> \r\n<button className=' btn btn-outline-light' style={{ marginRight: '10px' }} onClick={handleinitprompt } title=\"By clicking on this button, the chatbot next to you will operate according to the specifications you've provided in the text. You can test and make changes on it as needed. Once everything is confirmed, you can click on 'Generate chatbot response' to finalize and create your chatbot\">save</button>\r\n\r\n<button className=' btn btn-outline-light' onClick={handleUpdate} title=\"This is the final step! By clicking on this button, you will have your own chatbot with all the information accurately set. Please ensure that all the information is correct before proceeding.\">Update chatbot</button></div>\r\n\r\n\r\n</div>\r\n <br></br>\r\n </div>   </div> \r\n   \r\n<div class=\"container py-5 \" style={{position:'absolute',  marginLeft:'60%', marginTop :'5.8%' ,maxWidth: '1500%', maxHeight:'400px' , fontSize: '120%' }}>\r\n\r\n  <div class=\"row d-flex justify-content-center\"  className={isChatOpen ? 'chat-container' : 'chat-container minimized'}>\r\n    <div class=\"col-md-8 col-lg-6 col-xl-4\" >\r\n   \r\n      <div class=\"card\" id=\"chat1\" style={{ borderRadius: '10px'}}>\r\n        <div \r\n          class=\"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\"\r\n          style={{  backgroundColor : headerColor}}>\r\n          <i class=\"fas fa-angle-left\"></i>\r\n          <p class=\"mb-0 fw-bold\" style={{color: chatbotnamecolor}}>{chatbotname}  </p>\r\n          <i class=\"fas fa-times\"></i>\r\n          <button type=\"button\" class=\"btn-close \" aria-label=\"Close\"  onClick={handleToggleChat}></button>\r\n          \r\n\r\n        </div>\r\n        <div class=\"card-body\" style={{ backgroundColor : bodyColor}}>\r\n        <div class=\"chat-messages\" style={{ maxHeight: '225px', height:'225px', overflowY: 'auto' }}>\r\n   \r\n          <div class=\"d-flex flex-row justify-content-start mb-4\"  >\r\n          {logoSrc ? \r\n          <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n          }\r\n            <div class=\"p-3 ms-3\" style={{ borderRadius: '15px' ,  backgroundColor: chatbotmsgColor , color : 'white'}}>\r\n            <p class=\"small mb-0\" style={{ color: textColorchatbot }} >Hello, Please start the changes to create your own chatbot.</p>\r\n             </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex flex-row justify-content-end mb-4\">\r\n          <div class=\"p-3 ms-6\" style={{ borderRadius: '15px' , backgroundColor:senderColor }}>\r\n            <p class=\"small mb-0\" style={{ color: textColoruser }}>This is the sender message </p>\r\n            </div>\r\n            \r\n            <img  className=\"rounded-circle bg-outline-light logo\" src={Logo} alt=\"avatar 1\" style={{width: '30px' , height: '100%'}}/>\r\n              \r\n          </div>\r\n\r\n          <div class=\"d-flex flex-row justify-content-start mb-4\">\r\n          {logoSrc ? \r\n          <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n          }\r\n          \r\n           <div class=\"p-3 ms-6\" style={{ borderRadius: '15px' , backgroundColor:chatbotmsgColor  , color :textColorchatbot}}>\r\n           \r\n              <p class=\"small mb-0\">this is your chatbot messsage </p></div>\r\n            <div class=\"ms-3\" style={{borderradius:'15px'}}>\r\n              <div class=\"bg-image\">\r\n                <a href=\"#!\">\r\n                  <div class=\"mask\"></div>\r\n                </a>\r\n                </div>\r\n             </div>\r\n           </div>\r\n           <div id=\"responseDiv\" >\r\n           <div class=\"chat-messages\" style={{ maxHeight: '225px'}}>\r\n{chatHistory.map((entry, index) => (\r\n<div key={index}>\r\n  {entry.type === \"user\" && (\r\n    <div class=\"d-flex flex-row justify-content-end mb-4\">\r\n      \r\n      <div style={{ borderRadius: '15px', backgroundColor: senderColor,  color: textColoruser, marginRight:'2px' }} className=\"message user\">\r\n        {entry.message}</div>\r\n        {logoSrc ? \r\n      <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%', left:'2px' }}/> : <p>No logo selected</p>\r\n      }\r\n      \r\n      <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n        <div class=\"bg-image\">\r\n          <a href=\"#!\">\r\n            <div class=\"mask\"></div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n\r\n  {entry.type === \"chatbot\" && (\r\n    <div class=\"d-flex flex-row justify-content-start mb-4\">\r\n      {logoSrc ? \r\n      <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n      }\r\n      <div style={{ borderRadius: '15px', backgroundColor: chatbotmsgColor, color: textColorchatbot }} className=\"message chatbot\">\r\n      {entry.message.split('<br>').map((line, index) => (\r\n    <div key={index}>{line}</div>\r\n    \r\n  ))}\r\n\r\n      </div>\r\n      <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n        <div class=\"bg-image\">\r\n          <a href=\"#!\">\r\n            <div class=\"mask\"></div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )}\r\n</div>\r\n))}\r\n</div>\r\n</div>\r\n\r\n\r\n</div> \r\n           \r\n        \r\n          \r\n          <div class=\"form-outline\">\r\n          {chatHistory.length > 0 && (!chatbotResponseReceived)&& (\r\n  <button\r\n    class=\"btn btn-outline-dark\"\r\n    id=\"receive-response-button\"\r\n    type=\"button\"\r\n    onClick={handleFormSubmit}\r\n    style={{ marginBottom: '10px' }} \r\n    disabled\r\n  >\r\n     Response ...\r\n  </button>\r\n)}\r\n\r\n\r\n          <textarea class=\"form-control\"  id=\"userPrompt\" value={userPrompt} onChange={(e) => setUserPrompt(e.target.value)}\r\n            rows=\"4\" placeholder='Type your message'></textarea>\r\n            <br></br>\r\n            <div class=\"input-group-append\">\r\n             <button class=\"btn btn-outline-dark\" id=\"gpt-button\"  type=\"button\"  onClick={handleFormSubmit} >Ask Chatbot</button>\r\n             \r\n             \r\n             </div>\r\n           \r\n          </div>\r\n        \r\n\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n  \r\n</div>  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Chatupdate\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}