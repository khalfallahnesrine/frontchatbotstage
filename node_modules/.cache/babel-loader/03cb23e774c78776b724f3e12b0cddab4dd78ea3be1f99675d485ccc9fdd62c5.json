{"ast":null,"code":"var _jsxFileName = \"C:\\\\Webbstage\\\\Chatbotstage\\\\generateurchatbot\\\\src\\\\pages\\\\chaturl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/chatpage.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chaturl() {\n  _s();\n  const {\n    chatbotsId\n  } = useParams();\n  console.log(\"chatbotsId:\", chatbotsId);\n  const [chatbotData, setChatbotData] = useState(null);\n  const [chatbotname, setChatbotname] = useState(\"\");\n  const [chatbotnamecolor, setChatbotnamecolor] = useState(\"\");\n  const [headerColor, setheaderColor] = useState(\"\");\n  const [bodyColor, setbodyColor] = useState(\"\");\n  const [initialPrompt, setInitialPrompt] = useState('');\n  const [senderColor, setSenderColor] = useState(\"\");\n  const [chatbotmsgColor, setChatbotmsgColor] = useState(\"\");\n  const [logoSrc, setLogoSrc] = useState(\"\");\n  const [isChatOpen, setIsChatOpen] = useState(true);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userPrompt, setUserPrompt] = React.useState('');\n  const handleToggleChat = () => {\n    setIsChatOpen(prevState => !prevState);\n  };\n  const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newUserMessage = {\n      type: \"user\",\n      message: userPrompt\n    };\n    setChatHistory([...chatHistory, newUserMessage]);\n    setUserPrompt('');\n    fetch(\"/openaires\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: userPrompt\n      })\n    }).then(response => response.json()).then(data => {\n      const newChatEntry = {\n        type: \"user\",\n        message: userPrompt\n      };\n      const newResponseEntry = {\n        type: \"chatbot\",\n        message: data.answer\n      };\n      setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\n      setChatbotResponseReceived(true);\n    });\n    setChatbotResponseReceived(false);\n  };\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/chatboturl/${chatbotsId}`);\n        if (response.status === 200) {\n          const responseData = await response.json();\n          setChatbotData(responseData);\n          setChatbotname(responseData.name);\n          setChatbotnamecolor(responseData.nameColor);\n          setInitialPrompt(responseData.prompt);\n          setSenderColor(responseData.senderColor);\n          setChatbotmsgColor(responseData.chatbotmsgColor);\n          setLogoSrc(responseData.photo_data);\n          setheaderColor(responseData.headerColor);\n          setbodyColor(responseData.bodyColor);\n          try {\n            const initPromptResponse = await fetch(\"/initialpompt\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                initprompt: responseData.prompt\n              })\n            });\n\n            // Handle initPromptResponse if needed\n            const initPromptData = await initPromptResponse.json();\n            // Do something with initPromptData\n          } catch (error) {\n            console.error('Error sending initial prompt:', error);\n          }\n        } else if (response.status === 404) {\n          console.error('Chatbot not found');\n        } else {\n          console.error('Error fetching data:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    }\n    fetchData();\n  }, [chatbotsId]);\n  function handleKeyDown(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault(); // Prevents the default behavior (line break in textarea)\n      handleFormSubmit(); // Call your function to handle the form submission\n    }\n  }\n\n  const handleKeyUp = event => {\n    if (event && event.key === 'Enter') {\n      event.preventDefault();\n      handleFormSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container-full\",\n    style: {\n      position: 'relative',\n      marginRight: '25%',\n      maxHeight: '100%',\n      height: '1500px',\n      width: '100%',\n      fontSize: '100%',\n      marginTop: '0%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row d-flex justify-content-center\",\n      className: isChatOpen ? 'chat-container' : 'chat-container minimized',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-md-8 col-lg-6 col-xl-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          id: \"chat1\",\n          style: {\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\",\n            style: {\n              borderTopLeftRadius: '5px',\n              borderTopRightRadius: '0px',\n              backgroundColor: headerColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-angle-left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"mb-0 fw-bold\",\n              style: {\n                color: 'white'\n              },\n              children: [chatbotname, \"  \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-times\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            style: {\n              backgroundColor: bodyColor,\n              maxHeight: '725px',\n              height: '725px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"chat-messages\",\n              style: {\n                maxHeight: '400px',\n                overflowY: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"responseDiv\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"chat-messages\",\n                  style: {\n                    maxHeight: '400px'\n                  },\n                  children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [entry.type === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"d-flex flex-row justify-content-end mb-4\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"p-3 ms-6 small mb-0\",\n                        style: {\n                          borderRadius: '15px',\n                          backgroundColor: senderColor,\n                          color: 'black',\n                          marginRight: '2px'\n                        },\n                        className: \"message user\",\n                        children: entry.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 7\n                      }, this), logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"rounded-circle bg-outline-light logo\",\n                        src: logoSrc,\n                        alt: \"avatar 1\",\n                        style: {\n                          width: ' 30px',\n                          height: '100%',\n                          left: '2px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 9\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"No logo selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 150\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"ms-3\",\n                        style: {\n                          borderradius: '15px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"bg-image\",\n                          children: /*#__PURE__*/_jsxDEV(\"a\", {\n                            href: \"#!\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              class: \"mask\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 153,\n                              columnNumber: 15\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 13\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 151,\n                          columnNumber: 11\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 9\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 7\n                    }, this), entry.type === \"chatbot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"d-flex flex-row justify-content-start mb-4\",\n                      children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"rounded-circle bg-outline-light logo\",\n                        src: logoSrc,\n                        alt: \"avatar 1\",\n                        style: {\n                          width: ' 30px',\n                          height: '100%'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 9\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: \"No logo selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 138\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"p-3 ms-3 small mb-0\",\n                        style: {\n                          borderRadius: '15px',\n                          backgroundColor: chatbotmsgColor,\n                          color: 'white'\n                        },\n                        className: \"message chatbot\",\n                        children: entry.message.split('<br>').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: line\n                        }, index, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 168,\n                          columnNumber: 7\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 9\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"ms-3\",\n                        style: {\n                          borderradius: '15px'\n                        },\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"bg-image\",\n                          children: /*#__PURE__*/_jsxDEV(\"a\", {\n                            href: \"#!\",\n                            children: /*#__PURE__*/_jsxDEV(\"div\", {\n                              class: \"mask\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 176,\n                              columnNumber: 15\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 175,\n                            columnNumber: 13\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 174,\n                          columnNumber: 11\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 9\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 7\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 3\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-outline\",\n              style: {\n                top: '75%',\n                width: '98%',\n                position: 'fixed'\n              },\n              children: [chatHistory.length > 0 && !chatbotResponseReceived && /*#__PURE__*/_jsxDEV(\"button\", {\n                class: \"btn btn-outline-dark\",\n                id: \"receive-response-button\",\n                type: \"button\",\n                onClick: handleFormSubmit,\n                style: {\n                  marginBottom: '3px'\n                },\n                disabled: true,\n                children: \"Response ...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  top: '50%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  style: {\n                    marginBottom: ''\n                  },\n                  class: \"form-control\",\n                  id: \"userPrompt\",\n                  value: userPrompt,\n                  onChange: e => setUserPrompt(e.target.value),\n                  rows: \"4\",\n                  placeholder: \"Type your message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"input-group-append\",\n                  style: {\n                    marginTop: '3px'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn btn-outline-dark\",\n                    id: \"gpt-button\",\n                    type: \"button\",\n                    onClick: handleFormSubmit,\n                    children: \"Ask Chatbot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_s(Chaturl, \"M41NrzofginffhT+sJ74TBbuzNc=\", false, function () {\n  return [useParams];\n});\n_c = Chaturl;\nexport default Chaturl;\nvar _c;\n$RefreshReg$(_c, \"Chaturl\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Chaturl","_s","chatbotsId","console","log","chatbotData","setChatbotData","chatbotname","setChatbotname","chatbotnamecolor","setChatbotnamecolor","headerColor","setheaderColor","bodyColor","setbodyColor","initialPrompt","setInitialPrompt","senderColor","setSenderColor","chatbotmsgColor","setChatbotmsgColor","logoSrc","setLogoSrc","isChatOpen","setIsChatOpen","chatHistory","setChatHistory","userPrompt","setUserPrompt","handleToggleChat","prevState","chatbotResponseReceived","setChatbotResponseReceived","handleFormSubmit","event","preventDefault","newUserMessage","type","message","fetch","method","headers","body","JSON","stringify","prompt","then","response","json","data","newChatEntry","newResponseEntry","answer","fetchData","status","responseData","name","nameColor","photo_data","initPromptResponse","initprompt","initPromptData","error","handleKeyDown","key","handleKeyUp","class","style","position","marginRight","maxHeight","height","width","fontSize","marginTop","children","className","id","borderRadius","borderTopLeftRadius","borderTopRightRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","color","overflowY","map","entry","index","src","alt","left","borderradius","href","split","line","top","length","onClick","marginBottom","disabled","value","onChange","e","target","rows","placeholder","_c","$RefreshReg$"],"sources":["C:/Webbstage/Chatbotstage/generateurchatbot/src/pages/chaturl.js"],"sourcesContent":["import React , { useState, useEffect } from 'react'\r\nimport '../styles/chatpage.css'\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nfunction Chaturl() {\r\n  const { chatbotsId } = useParams();\r\n  console.log(\"chatbotsId:\", chatbotsId); \r\n  const [chatbotData, setChatbotData] = useState(null);\r\n  const [chatbotname, setChatbotname] = useState(\"\");\r\n  const [chatbotnamecolor, setChatbotnamecolor] = useState(\"\");\r\n  const [headerColor, setheaderColor] = useState(\"\");\r\n  const [bodyColor, setbodyColor] = useState(\"\");\r\n  const [initialPrompt, setInitialPrompt] = useState('');\r\n  const [senderColor, setSenderColor] = useState(\"\");\r\n  const [chatbotmsgColor, setChatbotmsgColor] = useState(\"\");\r\n  const [logoSrc, setLogoSrc] = useState(\"\");\r\n  const [isChatOpen, setIsChatOpen] = useState(true);\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [userPrompt, setUserPrompt] = React.useState('');\r\n  const handleToggleChat = () => {\r\n    setIsChatOpen(prevState => !prevState);\r\n  };\r\n  const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newUserMessage = {\r\n      type: \"user\",\r\n      message: userPrompt\r\n    };\r\n    setChatHistory([...chatHistory, newUserMessage]);\r\n    setUserPrompt('');\r\n    fetch(\"/openaires\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ prompt: userPrompt })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const newChatEntry = {\r\n          type: \"user\",\r\n          message: userPrompt\r\n        };\r\n        const newResponseEntry = {\r\n          type: \"chatbot\",\r\n          message: data.answer\r\n        };\r\n        setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\r\n        setChatbotResponseReceived(true);\r\n      });\r\n      setChatbotResponseReceived(false);\r\n  };\r\n \r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:5000/chatboturl/${chatbotsId}`);\r\n        \r\n        if (response.status === 200) {\r\n          const responseData = await response.json();\r\n          setChatbotData(responseData);\r\n          setChatbotname(responseData.name);\r\n          setChatbotnamecolor(responseData.nameColor);\r\n          setInitialPrompt(responseData.prompt);\r\n          setSenderColor(responseData.senderColor);\r\n          setChatbotmsgColor(responseData.chatbotmsgColor);\r\n          setLogoSrc(responseData.photo_data);\r\n          setheaderColor(responseData.headerColor);\r\n          setbodyColor(responseData.bodyColor);\r\n  \r\n          try {\r\n            const initPromptResponse = await fetch(\"/initialpompt\", {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              body: JSON.stringify({ initprompt: responseData.prompt })\r\n            });\r\n  \r\n            // Handle initPromptResponse if needed\r\n            const initPromptData = await initPromptResponse.json();\r\n            // Do something with initPromptData\r\n            \r\n          } catch (error) {\r\n            console.error('Error sending initial prompt:', error);\r\n          }\r\n        } else if (response.status === 404) {\r\n          console.error('Chatbot not found');\r\n        } else {\r\n          console.error('Error fetching data:', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    }\r\n  \r\n    fetchData();\r\n  }, [chatbotsId]);\r\n  \r\n  function handleKeyDown(event) {\r\n    if (event.key === 'Enter') {\r\n      event.preventDefault(); // Prevents the default behavior (line break in textarea)\r\n      handleFormSubmit(); // Call your function to handle the form submission\r\n    }\r\n  }\r\n  const handleKeyUp = (event) => {\r\n    if (event && event.key === 'Enter') {\r\n      event.preventDefault();\r\n      handleFormSubmit();\r\n    }\r\n  };\r\n  return (\r\n    \r\n    <div  class=\"container-full\" style={{position:'relative',marginRight:'25%', maxHeight:'100%',height:'1500px',width:'100%'   , fontSize: '100%' , marginTop:'0%'}}>\r\n  \r\n    <div class=\"row d-flex justify-content-center\" className={isChatOpen ? 'chat-container' : 'chat-container minimized'} >\r\n      <div class=\"col-md-8 col-lg-6 col-xl-4\" >\r\n     \r\n        <div class=\"card\" id=\"chat1\" style={{ borderRadius: '10px'}}>\r\n          <div \r\n            class=\"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\"\r\n            style={{ borderTopLeftRadius: '5px' ,  borderTopRightRadius: '0px' , backgroundColor : headerColor}}>\r\n            <i class=\"fas fa-angle-left\"></i>\r\n            <p class=\"mb-0 fw-bold\" style={{color: 'white'}}>{chatbotname}  </p>\r\n            <i class=\"fas fa-times\"></i>\r\n            \r\n\r\n          </div>\r\n          <div class=\"card-body\" style={{ backgroundColor : bodyColor, maxHeight: '725px',height:'725px'}}>\r\n          <div class=\"chat-messages\" style={{ maxHeight: '400px', overflowY: 'auto' }}>\r\n     \r\n  \r\n            \r\n             <div id=\"responseDiv\" >\r\n             <div class=\"chat-messages\" style={{ maxHeight: '400px'}}>\r\n{chatHistory.map((entry, index) => (\r\n  <div key={index}>\r\n    {entry.type === \"user\" && (\r\n      <div class=\"d-flex flex-row justify-content-end mb-4\">\r\n      <div class=\"p-3 ms-6 small mb-0\" style={{ borderRadius: '15px' ,  backgroundColor: senderColor,  color: 'black', marginRight:'2px' }}  className=\"message user\">\r\n              \r\n          {entry.message}</div>\r\n          {logoSrc ? \r\n        <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%', left:'2px' }}/> : <p>No logo selected</p>\r\n        }\r\n        \r\n        <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n          <div class=\"bg-image\">\r\n            <a href=\"#!\">\r\n              <div class=\"mask\"></div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n\r\n    {entry.type === \"chatbot\" && (\r\n      <div class=\"d-flex flex-row justify-content-start mb-4\">\r\n        {logoSrc ? \r\n        <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n        }\r\n        <div class=\"p-3 ms-3 small mb-0\" style={{ borderRadius: '15px' ,  backgroundColor: chatbotmsgColor , color : 'white'}}  className=\"message chatbot\">\r\n              \r\n      {entry.message.split('<br>').map((line, index) => (\r\n      <div key={index}>{line}</div>\r\n      \r\n    ))}\r\n  \r\n        </div>\r\n        <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n          <div class=\"bg-image\">\r\n            <a href=\"#!\">\r\n              <div class=\"mask\"></div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </div>\r\n))}\r\n</div>\r\n</div>\r\n</div> \r\n\r\n          \r\n<div class=\"form-outline\" style={{top:'75%',width:'98%', position:'fixed'}}>\r\n{chatHistory.length > 0 && (!chatbotResponseReceived)&& (\r\n      <button\r\n        class=\"btn btn-outline-dark\"\r\n        id=\"receive-response-button\"\r\n        type=\"button\"\r\n        onClick={handleFormSubmit}\r\n        style={{ marginBottom: '3px' }} \r\n        disabled\r\n      >\r\n         Response ...\r\n      </button>\r\n    )}\r\n    <div style={{top:'50%'}}>\r\n            <textarea style={{marginBottom:''}} class=\"form-control\"  id=\"userPrompt\" value={userPrompt} onChange={(e) => setUserPrompt(e.target.value)}\r\n              rows=\"4\" placeholder='Type your message'></textarea>\r\n              <div class=\"input-group-append\" style={{marginTop:'3px'}}>\r\n               <button class=\"btn btn-outline-dark\" id=\"gpt-button\"  type=\"button\"  onClick={handleFormSubmit} >Ask Chatbot</button>\r\n               </div></div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      </div>\r\n    \r\n    \r\n \r\n \r\n\r\n \r\n\r\n\r\n  )\r\n}\r\n\r\nexport default Chaturl\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}