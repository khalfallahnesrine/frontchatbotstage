{"ast":null,"code":"var _jsxFileName = \"C:\\\\Webbstage\\\\Chatbotstage\\\\generateurchatbot\\\\src\\\\pages\\\\chatupdate.js\",\n  _s = $RefreshSig$();\n// UpdateChatbot.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateChatbot() {\n  _s();\n  const {\n    chatbotId\n  } = useParams();\n  const [formData, setFormData] = useState({\n    name: '',\n    prompt: ''\n    // ... other fields\n  });\n\n  useEffect(() => {\n    // Fetch existing chatbot data from the backend and pre-fill the form\n    async function fetchChatbotData() {\n      try {\n        const isAuthenticated = localStorage.getItem('token');\n        const headers = {\n          Authorization: `Bearer ${isAuthenticated}`\n        };\n        const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\n          headers: headers\n        });\n        const chatbotData = response.data; // This is the data of the selected chatbot\n        // Set your state using the chatbotData\n        setFormData({\n          name: chatbotData.name,\n          prompt: chatbotData.prompt\n          // ... set other fields\n        });\n      } catch (error) {\n        console.error('Error fetching chatbot data:', error);\n      }\n    }\n    fetchChatbotData();\n  }, [chatbotId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send a PUT request to update the chatbot\n      const isAuthenticated = localStorage.getItem('token');\n      const headers = {\n        Authorization: `Bearer ${isAuthenticated}`\n      };\n      const response = await axios.put(`http://127.0.0.1:5000/updatechatbot/${chatbotId}`, formData, {\n        headers: headers\n      });\n      if (response.status === 200) {\n        // Chatbot updated successfully\n        console.log('Chatbot updated successfully:', response.data);\n        // Handle navigation or display a success message\n      } else {\n        console.log('Unexpected response status:', response.status);\n      }\n    } catch (error) {\n      console.error('Error updating chatbot:', error);\n      // Handle the error here\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        placeholder: \"Chatbot Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"prompt\",\n        value: formData.prompt,\n        onChange: handleChange,\n        placeholder: \"Chatbot Prompt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateChatbot, \"FjG1HO79YtP1Cg6bU4K40rGtD5U=\", false, function () {\n  return [useParams];\n});\n_c = UpdateChatbot;\nexport default UpdateChatbot;\nvar _c;\n$RefreshReg$(_c, \"UpdateChatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","UpdateChatbot","_s","chatbotId","formData","setFormData","name","prompt","fetchChatbotData","isAuthenticated","localStorage","getItem","headers","Authorization","response","get","chatbotData","data","error","console","handleSubmit","e","preventDefault","put","status","log","handleChange","value","target","prevData","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Webbstage/Chatbotstage/generateurchatbot/src/pages/chatupdate.js"],"sourcesContent":["// UpdateChatbot.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction UpdateChatbot() {\r\n  const { chatbotId } = useParams();\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    prompt: '',\r\n    // ... other fields\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch existing chatbot data from the backend and pre-fill the form\r\n    async function fetchChatbotData() {\r\n      try {\r\n        const isAuthenticated = localStorage.getItem('token');\r\n        const headers = {\r\n          Authorization: `Bearer ${isAuthenticated}`,\r\n        };\r\n\r\n        const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\r\n          headers: headers,\r\n        });\r\n\r\n        const chatbotData = response.data; // This is the data of the selected chatbot\r\n        // Set your state using the chatbotData\r\n        setFormData({\r\n          name: chatbotData.name,\r\n          prompt: chatbotData.prompt,\r\n          // ... set other fields\r\n        });\r\n      } catch (error) {\r\n        console.error('Error fetching chatbot data:', error);\r\n      }\r\n    }\r\n\r\n    fetchChatbotData();\r\n  }, [chatbotId]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Send a PUT request to update the chatbot\r\n      const isAuthenticated = localStorage.getItem('token');\r\n      const headers = {\r\n        Authorization: `Bearer ${isAuthenticated}`,\r\n      };\r\n\r\n      const response = await axios.put(\r\n        `http://127.0.0.1:5000/updatechatbot/${chatbotId}`,\r\n        formData,\r\n        { headers: headers }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        // Chatbot updated successfully\r\n        console.log('Chatbot updated successfully:', response.data);\r\n        // Handle navigation or display a success message\r\n      } else {\r\n        console.log('Unexpected response status:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating chatbot:', error);\r\n      // Handle the error here\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Update Chatbot</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Render form fields here */}\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Chatbot Name\"\r\n        />\r\n        <textarea\r\n          name=\"prompt\"\r\n          value={formData.prompt}\r\n          onChange={handleChange}\r\n          placeholder=\"Chatbot Prompt\"\r\n        />\r\n        {/* ... render other form fields */}\r\n        <button type=\"submit\">Update Chatbot</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateChatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}