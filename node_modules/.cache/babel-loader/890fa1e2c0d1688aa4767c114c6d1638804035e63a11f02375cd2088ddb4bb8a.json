{"ast":null,"code":"var _jsxFileName = \"C:\\\\Webbstage\\\\Chatbotstage\\\\generateurchatbot\\\\src\\\\pages\\\\dashboard.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport Logout from '../assets/logout.png';\nimport Chat from '../components/chat';\nimport Logo from '../assets/cha (2).png';\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Profil from './profil';\nimport '../styles/dashboard.css';\nimport Home from './home';\nimport axios from 'axios';\nimport Chatpage from './chatpage';\nimport { useParams } from 'react-router-dom';\nimport useToken from './usetoken';\nimport Header from './header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard(props) {\n  _s2();\n  const [color1, setColor1] = useState('#FFFFFF');\n  const [color2, setColor2] = useState('#CFDEF2');\n  const [color3, setColor3] = useState('#03224c');\n  const [color4, setColor4] = useState('#03224c');\n  const [color5, setColor5] = useState('#FFFFFF');\n  const navigate = useNavigate();\n  const [userid, setuserid] = useState('');\n  const [logoSrc, setLogoSrc] = useState(Logo);\n  const [textInput, setTextInput] = useState('chatbotty');\n  const [textInput2, setTextInput2] = useState();\n  const [initialPrompt, setInitialPrompt] = useState('');\n  const [cahtid, setchatid] = useState();\n  const [formDatachat, setFormDataChat] = useState({\n    id: cahtid,\n    name: textInput,\n    prompt: textInput2,\n    nameColor: color1,\n    senderColor: color2,\n    chatbotmsgColor: color3,\n    headerColor: color4,\n    bodyColor: color5,\n    photo_data: logoSrc,\n    user_id: userid\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormDataChat(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmitChatForm = async () => {\n    try {\n      const formDatachat = {\n        name: textInput,\n        prompt: initialPrompt,\n        nameColor: color1,\n        senderColor: color2,\n        chatbotmsgColor: color3,\n        headerColor: color4,\n        bodyColor: color5,\n        photo_data: logoSrc\n      };\n      const isAuthenticated = localStorage.getItem('token');\n      const headers = {\n        Authorization: `Bearer ${isAuthenticated}`\n      };\n      const response = await axios.post('http://127.0.0.1:5000/createchtbot', formDatachat, {\n        headers: headers\n      });\n      if (response.status === 200) {\n        const {\n          message,\n          chatbot_id\n        } = response.data;\n        console.log('Chatbot created successfully:', message);\n        console.log('New Chatbot ID:', chatbot_id);\n        navigate(`/Chatpage/${chatbot_id}`);\n      } else {\n        console.log('Unexpected response status:', response.status);\n      }\n      ;\n    } catch (error) {\n      console.error('Error:', error);\n      if (error.response) {\n        if (error.response) {\n          if (error.response.status === 400) {\n            alert(\"Please fill the prompt input to personalize your chatbot!\");\n          } else {\n            alert('failed. Please check your INPUTS.');\n          }\n        }\n      }\n      // Handle the error here\n    }\n  };\n\n  const handleColorChange1 = event => {\n    const newColor1 = event.target.value;\n    setColor1(newColor1);\n  };\n  const handleColorChange2 = event => {\n    const newColor2 = event.target.value;\n    setColor2(newColor2);\n  };\n  const handleColorChange3 = event => {\n    const newColor3 = event.target.value;\n    setColor3(newColor3);\n  };\n  const handleColorChange4 = event => {\n    const newColor4 = event.target.value;\n    setColor4(newColor4);\n  };\n  const handleColorChange5 = event => {\n    const newColor5 = event.target.value;\n    setColor5(newColor5);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setLogoSrc(reader.result);\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const [isChatOpen, setIsChatOpen] = useState(true);\n  const handleToggleChat = () => {\n    setIsChatOpen(prevState => !prevState);\n  };\n  const handleTextChange = event => {\n    setTextInput(event.target.value);\n  };\n  function isColorDark(color) {\n    // Convert color to RGB\n    const rgb = parseInt(color.slice(1), 16);\n    const r = rgb >> 16 & 0xff;\n    const g = rgb >> 8 & 0xff;\n    const b = rgb >> 0 & 0xff;\n\n    // Calculate luminance\n    const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\n\n    // Return true if luminance is below a certain threshold, indicating a dark color\n    return luminance < 128;\n  }\n  const textColoruser = isColorDark(color2) ? 'white' : 'black';\n  const textColorchatbot = isColorDark(color3) ? 'white' : 'black';\n  const [userPrompt, setUserPrompt] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [chatbotResponse, setChatbotResponse] = useState('');\n\n  //const handleLogout = async () => {\n  // try {\n  // Make a GET request to the logout endpoint\n  //   await axios.get('http://127.0.0.1:5000/logout');\n\n  // Perform any additional cleanup or redirect if needed\n  // For example:\n  //  window.location.href = '/'; // Redirect to the login page after logout\n  // } catch (error) {\n  // console.error('Logout error:', error);\n  // Handle the error here\n  // }\n  //  };\n\n  const [loadedChatbotDetails, setLoadedChatbotDetails] = useState(null);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    async function fetchChatbotData() {\n      _s();\n      try {\n        const isAuthenticated = localStorage.getItem('token');\n        const headers = {\n          Authorization: `Bearer ${isAuthenticated}`\n        };\n        const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\n          headers: headers\n        });\n        const [cahtid, setchatid] = useState();\n        const chatbotData = response.data; // This is the data of the selected chatbot\n        // Set your state using the chatbotData\n        setLoadedChatbotDetails(chatbotData);\n        setTextInput(chatbotData.name);\n        setInitialPrompt(chatbotData.initialPrompt);\n        setColor1(chatbotData.nameColor);\n        setColor2(chatbotData.senderColor);\n        setColor3(chatbotData.chatbotmsgColor);\n        setColor4(chatbotData.headerColor);\n        setColor5(chatbotData.bodyColor);\n        setLogoSrc(chatbotData.photo_data);\n        setuserid(chatbotData.user_id);\n      } catch (error) {\n        console.error('Error fetching chatbot data:', error);\n      }\n    }\n    _s(fetchChatbotData, \"jE28rHyn1DZlNuvO9w97tjUu4OI=\");\n    if (chatbotId) {\n      fetchChatbotData();\n    }\n  }, [chatbotId]);\n  const handleresult = async cahtid => {\n    navigate('/Chatpage/cahtid');\n  };\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const newUserMessage = {\n      type: \"user\",\n      message: userPrompt\n    };\n    setChatHistory([...chatHistory, newUserMessage]);\n    setUserPrompt('');\n    fetch(\"/openaires\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: userPrompt\n      })\n    }).then(response => response.json()).then(data => {\n      const newChatEntry = {\n        type: \"user\",\n        message: userPrompt\n      };\n      const newResponseEntry = {\n        type: \"chatbot\",\n        message: data.answer\n      };\n      setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\n      setChatbotResponseReceived(true);\n    });\n    setChatbotResponseReceived(false);\n  };\n  const handleinitprompt = event => {\n    event.preventDefault();\n    fetch(\"/initialpompt\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        initprompt: initialPrompt\n      })\n    }).then(response => response.json());\n  };\n  const {\n    chatbotId\n  } = useParams();\n  useEffect(() => {\n    async function fetchChatbotData() {\n      try {\n        const isAuthenticated = localStorage.getItem('token');\n        const headers = {\n          Authorization: `Bearer ${isAuthenticated}`\n        };\n        const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\n          headers: headers\n        });\n        const chatbotData = response.data; // This is the data of the selected chatbot\n        // Set your state using the chatbotData\n      } catch (error) {\n        console.error('Error fetching chatbot data:', error);\n      }\n    }\n    fetchChatbotData();\n  }, [chatbotId]);\n  const {\n    removeToken\n  } = useToken();\n  const handleLogout = () => {\n    // Assuming removeToken is a function that logs the user out\n    removeToken(); // Call the removeToken function to log the user out\n\n    // Redirect the user to the login page or perform other necessary actions\n    // For example, navigate to the login page using react-router-dom\n    // navigate('/login');\n  };\n\n  const handllog = event => {\n    event.preventDefault();\n    fetch(\"/initialpompt\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        initprompt: ''\n      })\n    }).then(response => {\n      if (response.ok) {\n        // Handle successful response (status code 200)\n        // You might not need to parse JSON in this case\n        console.log(\"Request was successful\");\n      } else {\n        // Handle error responses or non-JSON responses\n        console.error(\"Request failed with status:\", response.status);\n      }\n    }).catch(error => {\n      console.error(\"Request error:\", error);\n    });\n  };\n  const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handllog,\n      children: [\"  \", /*#__PURE__*/_jsxDEV(Header, {\n        token: removeToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        top: '8% ',\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"col-md mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-outline\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"mt-5\",\n          style: {\n            color: 'white',\n            position: 'absolute',\n            top: '3%',\n            left: '15%',\n            right: '53%'\n          },\n          children: \" Create your own Chatbot now ! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid white',\n            padding: '10px',\n            top: ' 15%',\n            left: '15%',\n            position: 'absolute',\n            width: '35%',\n            height: '500px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control form-control-lg\",\n            value: textInput,\n            onChange: handleTextChange,\n            placeholder: \"Chatbot name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select your chatbot name color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color1,\n              onChange: handleColorChange1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the sender message color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color2,\n              onChange: handleColorChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the chatbot message color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color3,\n              onChange: handleColorChange3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the header color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color4,\n              onChange: handleColorChange4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"3%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text text-light \",\n              style: {\n                marginRight: \"2%\"\n              },\n              children: \" Select the body color : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 6\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"color\",\n              value: color5,\n              onChange: handleColorChange5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 6\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".png,.jpg,.jpeg\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: initialPrompt,\n            style: {\n              marginTop: \"2%\"\n            },\n            placeholder: \"Chatbot function expl : I want this chatbot understand in....\",\n            className: \"form-control\",\n            id: \"exampleFormControlTextarea1\",\n            rows: \"3\",\n            onChange: e => setInitialPrompt(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" btn btn-outline-light\",\n              style: {\n                marginRight: '10px'\n              },\n              onClick: handleinitprompt,\n              title: \"By clicking on this button, the chatbot next to you will operate according to the specifications you've provided in the text. You can test and make changes on it as needed. Once everything is confirmed, you can click on 'Generate chatbot response' to finalize and create your chatbot\",\n              children: \"save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 2\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" btn btn-outline-light\",\n              onClick: handleSubmitChatForm,\n              title: \"This is the final step! By clicking on this button, you will have your own chatbot with all the information accurately set. Please ensure that all the information is correct before proceeding.\",\n              children: \"Generate chatbot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 4\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 6\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container py-5 \",\n      style: {\n        position: 'absolute',\n        marginLeft: '60%',\n        marginTop: '5.8%',\n        maxWidth: '1500%',\n        maxHeight: '400px',\n        fontSize: '120%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row d-flex justify-content-center\",\n        className: isChatOpen ? 'chat-container' : 'chat-container minimized',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-8 col-lg-6 col-xl-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            id: \"chat1\",\n            style: {\n              borderRadius: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\",\n              style: {\n                backgroundColor: color4\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-angle-left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"mb-0 fw-bold\",\n                style: {\n                  color: color1\n                },\n                children: [textInput, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fas fa-times\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                class: \"btn-close \",\n                \"aria-label\": \"Close\",\n                onClick: handleToggleChat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              style: {\n                backgroundColor: color5\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"chat-messages\",\n                style: {\n                  maxHeight: '225px',\n                  height: '225px',\n                  overflowY: 'auto'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-start mb-4\",\n                  children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: logoSrc,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: ' 30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 15\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No logo selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 144\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-3\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: color3,\n                      color: 'white'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      style: {\n                        color: textColorchatbot\n                      },\n                      children: \"Hello, Please start the changes to create your own chatbot.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-end mb-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-6\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: color2\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      style: {\n                        color: textColoruser\n                      },\n                      children: \"This is the sender message \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 399,\n                      columnNumber: 17\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: Logo,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: '30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"d-flex flex-row justify-content-start mb-4\",\n                  children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"rounded-circle bg-outline-light logo\",\n                    src: logoSrc,\n                    alt: \"avatar 1\",\n                    style: {\n                      width: ' 30px',\n                      height: '100%'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 15\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No logo selected\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 144\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"p-3 ms-6\",\n                    style: {\n                      borderRadius: '15px',\n                      backgroundColor: color3,\n                      color: textColorchatbot\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      class: \"small mb-0\",\n                      children: \"this is your chatbot messsage \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 16\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"ms-3\",\n                    style: {\n                      borderradius: '15px'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"bg-image\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: \"#!\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"mask\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 417,\n                          columnNumber: 23\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 416,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 415,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"responseDiv\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"chat-messages\",\n                    style: {\n                      maxHeight: '225px'\n                    },\n                    children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [entry.type === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"d-flex flex-row justify-content-end mb-4\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            borderRadius: '15px',\n                            backgroundColor: color2,\n                            color: textColoruser,\n                            marginRight: '2px'\n                          },\n                          className: \"message user\",\n                          children: entry.message\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 429,\n                          columnNumber: 11\n                        }, this), logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: \"rounded-circle bg-outline-light logo\",\n                          src: logoSrc,\n                          alt: \"avatar 1\",\n                          style: {\n                            width: ' 30px',\n                            height: '100%',\n                            left: '2px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 11\n                        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"No logo selected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 432,\n                          columnNumber: 152\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"ms-3\",\n                          style: {\n                            borderradius: '15px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            class: \"bg-image\",\n                            children: /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"#!\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                class: \"mask\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 438,\n                                columnNumber: 17\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 437,\n                              columnNumber: 15\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 436,\n                            columnNumber: 13\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 435,\n                          columnNumber: 11\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 9\n                      }, this), entry.type === \"chatbot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"d-flex flex-row justify-content-start mb-4\",\n                        children: [logoSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          className: \"rounded-circle bg-outline-light logo\",\n                          src: logoSrc,\n                          alt: \"avatar 1\",\n                          style: {\n                            width: ' 30px',\n                            height: '100%'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 448,\n                          columnNumber: 11\n                        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: \"No logo selected\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 448,\n                          columnNumber: 140\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            borderRadius: '15px',\n                            backgroundColor: color3,\n                            color: textColorchatbot\n                          },\n                          className: \"message chatbot\",\n                          children: entry.message.split('<br>').map((line, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: line\n                          }, index, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 452,\n                            columnNumber: 9\n                          }, this))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 11\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          class: \"ms-3\",\n                          style: {\n                            borderradius: '15px'\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            class: \"bg-image\",\n                            children: /*#__PURE__*/_jsxDEV(\"a\", {\n                              href: \"#!\",\n                              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                                class: \"mask\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 460,\n                                columnNumber: 17\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 459,\n                              columnNumber: 15\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 458,\n                            columnNumber: 13\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 457,\n                          columnNumber: 11\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 446,\n                        columnNumber: 9\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 5\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 16\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 16\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"form-outline\",\n                children: [chatHistory.length > 0 && !chatbotResponseReceived && /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"btn btn-outline-dark\",\n                  id: \"receive-response-button\",\n                  type: \"button\",\n                  onClick: handleFormSubmit,\n                  style: {\n                    marginBottom: '10px'\n                  },\n                  disabled: true,\n                  children: \"Response ...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  class: \"form-control\",\n                  id: \"userPrompt\",\n                  value: userPrompt,\n                  onChange: e => setUserPrompt(e.target.value),\n                  rows: \"4\",\n                  placeholder: \"Type your message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"input-group-append\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    class: \"btn btn-outline-dark\",\n                    id: \"gpt-button\",\n                    type: \"button\",\n                    onClick: handleFormSubmit,\n                    children: \"Ask Chatbot\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 18\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 5\n    }, this), loadedChatbotDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control form-control-lg\",\n        value: loadedChatbotDetails.name,\n        onChange: handleTextChange,\n        placeholder: \"Chatbot name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '3%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text text-light\",\n          style: {\n            marginRight: '2%'\n          },\n          children: \"Select your chatbot name color :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: color1,\n          onChange: handleColorChange1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: loadedChatbotDetails.initialPrompt,\n        style: {\n          marginTop: '2%'\n        },\n        placeholder: \"Chatbot function expl : I want this chatbot understand in....\",\n        className: \"form-control\",\n        id: \"exampleFormControlTextarea1\",\n        rows: \"3\",\n        onChange: e => setInitialPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          style: {\n            marginRight: '10px'\n          },\n          onClick: handleinitprompt,\n          title: \"Save initial prompt\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-light\",\n          onClick: handleSubmitChatForm,\n          title: \"Generate chatbot\",\n          children: \"Generate chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 4\n  }, this);\n}\n_s2(Dashboard, \"lgFq0JbY85pt5ME6ieyKTFq2law=\", false, function () {\n  return [useNavigate, useParams, useToken];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Logout","Chat","Logo","Link","Navigate","useNavigate","BrowserRouter","Router","Route","Routes","Profil","Home","axios","Chatpage","useParams","useToken","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","props","_s2","color1","setColor1","color2","setColor2","color3","setColor3","color4","setColor4","color5","setColor5","navigate","userid","setuserid","logoSrc","setLogoSrc","textInput","setTextInput","textInput2","setTextInput2","initialPrompt","setInitialPrompt","cahtid","setchatid","formDatachat","setFormDataChat","id","name","prompt","nameColor","senderColor","chatbotmsgColor","headerColor","bodyColor","photo_data","user_id","handleChange","e","value","target","prevData","handleSubmitChatForm","isAuthenticated","localStorage","getItem","headers","Authorization","response","post","status","message","chatbot_id","data","console","log","error","alert","handleColorChange1","event","newColor1","handleColorChange2","newColor2","handleColorChange3","newColor3","handleColorChange4","newColor4","handleColorChange5","newColor5","handleFileChange","file","files","reader","FileReader","onloadend","result","readAsDataURL","isChatOpen","setIsChatOpen","handleToggleChat","prevState","handleTextChange","isColorDark","color","rgb","parseInt","slice","r","g","b","luminance","textColoruser","textColorchatbot","userPrompt","setUserPrompt","chatHistory","setChatHistory","chatbotResponse","setChatbotResponse","loadedChatbotDetails","setLoadedChatbotDetails","_s","$RefreshSig$","fetchChatbotData","get","chatbotId","chatbotData","handleresult","handleFormSubmit","preventDefault","newUserMessage","type","fetch","method","body","JSON","stringify","then","json","newChatEntry","newResponseEntry","answer","setChatbotResponseReceived","handleinitprompt","initprompt","removeToken","handleLogout","handllog","ok","catch","chatbotResponseReceived","className","children","onClick","token","fileName","_jsxFileName","lineNumber","columnNumber","style","top","position","class","left","right","border","padding","width","height","onChange","placeholder","marginTop","marginRight","accept","rows","title","marginLeft","maxWidth","maxHeight","fontSize","borderRadius","backgroundColor","overflowY","src","alt","borderradius","href","map","entry","index","split","line","length","marginBottom","disabled","_c","$RefreshReg$"],"sources":["C:/Webbstage/Chatbotstage/generateurchatbot/src/pages/dashboard.js"],"sourcesContent":["import React , {useEffect , useState} from 'react'\r\nimport Sidebar from '../components/Sidebar'\r\nimport Logout from '../assets/logout.png'\r\nimport Chat from '../components/chat'\r\nimport Logo from '../assets/cha (2).png'\r\nimport { Link, Navigate, useNavigate } from 'react-router-dom';\r\nimport {BrowserRouter as Router ,Route , Routes } from 'react-router-dom'; \r\nimport Profil from './profil'\r\nimport '../styles/dashboard.css'\r\nimport Home from './home'\r\nimport axios from 'axios';\r\nimport Chatpage from './chatpage';\r\nimport { useParams } from 'react-router-dom';\r\nimport useToken from './usetoken'\r\nimport Header from './header'\r\nfunction Dashboard(props) {\r\n  const [color1, setColor1] = useState('#FFFFFF');\r\n  const [color2, setColor2] = useState('#CFDEF2');\r\n  const [color3, setColor3] = useState('#03224c');\r\n  const [color4, setColor4] = useState('#03224c');\r\n  const [color5, setColor5] = useState('#FFFFFF');\r\n  \r\n  const navigate = useNavigate();\r\n  \r\n  const [userid, setuserid] = useState('');\r\n  const [logoSrc, setLogoSrc] = useState(Logo);\r\n  const [textInput, setTextInput] = useState('chatbotty');\r\n  const [textInput2, setTextInput2] = useState();\r\n  const [initialPrompt, setInitialPrompt] = useState('');\r\n  const [cahtid, setchatid] = useState();\r\n  const [formDatachat, setFormDataChat] = useState({\r\n    id : cahtid ,\r\n    name:textInput,\r\n    prompt:textInput2,\r\n    nameColor : color1,\r\n    senderColor:color2,\r\n    chatbotmsgColor: color3, \r\n    headerColor: color4,\r\n    bodyColor:color5,\r\n    photo_data :logoSrc ,  \r\n    user_id:userid \r\n  });\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormDataChat ((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n  const handleSubmitChatForm = async () => {\r\n    try {\r\n        const formDatachat = {\r\n        name:textInput,\r\n       prompt:initialPrompt,\r\n       nameColor : color1,\r\n    senderColor:color2,\r\n    chatbotmsgColor: color3, \r\n    headerColor: color4,\r\n    bodyColor:color5,\r\n    photo_data :logoSrc , \r\n  \r\n      };\r\n      const isAuthenticated = localStorage.getItem('token');\r\n      const headers = {\r\n               Authorization: `Bearer ${isAuthenticated}`,\r\n       \r\n    };\r\n    \r\n      \r\n      const response = await axios.post('http://127.0.0.1:5000/createchtbot', formDatachat, {\r\n        headers: headers, });\r\n        if (response.status === 200) {\r\n          const { message, chatbot_id } = response.data;\r\n          console.log('Chatbot created successfully:', message);\r\n          console.log('New Chatbot ID:', chatbot_id);\r\n          navigate(`/Chatpage/${chatbot_id}`);\r\n        } else {\r\n          console.log('Unexpected response status:', response.status);\r\n        };\r\n    } catch (error) {\r\n     \r\n      console.error('Error:', error);\r\n       if (error.response){  if (error.response) {\r\n        if (error.response.status === 400) {\r\n          alert(\"Please fill the prompt input to personalize your chatbot!\");\r\n        }else {\r\n          alert('failed. Please check your INPUTS.');\r\n        }\r\n\r\n    }}\r\n      // Handle the error here\r\n    }\r\n  };\r\n  const handleColorChange1 = (event) => {\r\n    const newColor1 = event.target.value ; \r\n    setColor1(newColor1);\r\n  };\r\n  const handleColorChange2 = (event) => {\r\n    const newColor2 = event.target.value ; \r\n    setColor2(newColor2);\r\n  };\r\n  const handleColorChange3 = (event) => {\r\n    const newColor3 = event.target.value ; \r\n    setColor3(newColor3);\r\n  };\r\n  const handleColorChange4 = (event) => {\r\n    const newColor4 = event.target.value ; \r\n    setColor4(newColor4);\r\n  };\r\n  const handleColorChange5 = (event) => {\r\n    const  newColor5 =  event.target.value ; \r\n    setColor5(newColor5);\r\n  };\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      setLogoSrc(reader.result);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  const [isChatOpen, setIsChatOpen] = useState(true);\r\n      \r\n        const handleToggleChat = () => {\r\n          setIsChatOpen(prevState => !prevState);\r\n        };\r\n       \r\n\r\n        const handleTextChange = (event) => {\r\n          setTextInput(event.target.value);\r\n        };\r\n        function isColorDark(color) {\r\n          // Convert color to RGB\r\n          const rgb = parseInt(color.slice(1), 16);\r\n          const r = (rgb >> 16) & 0xff;\r\n          const g = (rgb >>  8) & 0xff;\r\n          const b = (rgb >>  0) & 0xff;\r\n        \r\n          // Calculate luminance\r\n          const luminance = 0.299 * r + 0.587 * g + 0.114 * b;\r\n        \r\n          // Return true if luminance is below a certain threshold, indicating a dark color\r\n          return luminance < 128;\r\n        }\r\n        const textColoruser = isColorDark(color2) ? 'white' : 'black';\r\n        const textColorchatbot = isColorDark(color3) ? 'white' : 'black';\r\n        \r\n        const [userPrompt, setUserPrompt] = useState('');\r\n        \r\n        const [chatHistory, setChatHistory] = useState([]);\r\n        const [chatbotResponse, setChatbotResponse] = useState('');\r\n   \r\n        //const handleLogout = async () => {\r\n         // try {\r\n              // Make a GET request to the logout endpoint\r\n           //   await axios.get('http://127.0.0.1:5000/logout');\r\n  \r\n              // Perform any additional cleanup or redirect if needed\r\n              // For example:\r\n            //  window.location.href = '/'; // Redirect to the login page after logout\r\n         // } catch (error) {\r\n             // console.error('Logout error:', error);\r\n              // Handle the error here\r\n         // }\r\n    //  };\r\n      \r\n    \r\n    \r\n      \r\n  \r\n    const [loadedChatbotDetails, setLoadedChatbotDetails] = useState(null);\r\n    useEffect(() => {\r\n      async function fetchChatbotData() {\r\n        try {\r\n          const isAuthenticated = localStorage.getItem('token');\r\n          const headers = {\r\n            Authorization: `Bearer ${isAuthenticated}`,\r\n          };\r\n  \r\n          const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\r\n            headers: headers,\r\n          });\r\n          const [cahtid, setchatid] = useState();\r\n          const chatbotData = response.data; // This is the data of the selected chatbot\r\n          // Set your state using the chatbotData\r\n          setLoadedChatbotDetails(chatbotData);\r\n          setTextInput(chatbotData.name);\r\n          setInitialPrompt(chatbotData.initialPrompt);\r\n          setColor1(chatbotData.nameColor);\r\n          setColor2(chatbotData.senderColor);\r\n          setColor3(chatbotData.chatbotmsgColor);\r\n          setColor4(chatbotData.headerColor);\r\n          setColor5(chatbotData.bodyColor);\r\n          setLogoSrc(chatbotData.photo_data);\r\n          setuserid(chatbotData.user_id);\r\n        } catch (error) {\r\n          console.error('Error fetching chatbot data:', error);\r\n        }\r\n      }\r\n  \r\n      if (chatbotId) {\r\n        fetchChatbotData();\r\n      }\r\n    }, [chatbotId]);\r\n  \r\n        const handleresult = async (cahtid) =>{\r\n          navigate('/Chatpage/cahtid');\r\n        }\r\n        const handleFormSubmit = (event) => {\r\n          event.preventDefault();\r\n          const newUserMessage = {\r\n            type: \"user\",\r\n            message: userPrompt\r\n          };\r\n          setChatHistory([...chatHistory, newUserMessage]);\r\n          setUserPrompt('');\r\n       \r\n          fetch(\"/openaires\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ prompt: userPrompt })\r\n          })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              const newChatEntry = {\r\n                type: \"user\",\r\n                message: userPrompt\r\n              };\r\n              const newResponseEntry = {\r\n                type: \"chatbot\",\r\n                message: data.answer\r\n              };\r\n            \r\n              setChatHistory([...chatHistory, newChatEntry, newResponseEntry]);\r\n              \r\n              setChatbotResponseReceived(true);\r\n                });\r\n                setChatbotResponseReceived(false);\r\n        };\r\n        \r\n\r\n        const handleinitprompt = (event) => {\r\n          event.preventDefault();\r\n      \r\n          fetch(\"/initialpompt\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ initprompt: initialPrompt })\r\n          })\r\n            .then(response => response.json())\r\n            \r\n        };\r\n        const { chatbotId } = useParams();\r\n        useEffect(() => {\r\n          async function fetchChatbotData() {\r\n            try {\r\n              const isAuthenticated = localStorage.getItem('token');\r\n              const headers = {\r\n                Authorization: `Bearer ${isAuthenticated}`,\r\n              };\r\n      \r\n              const response = await axios.get(`http://127.0.0.1:5000/chatbot/${chatbotId}`, {\r\n                headers: headers,\r\n              });\r\n      \r\n              const chatbotData = response.data; // This is the data of the selected chatbot\r\n              // Set your state using the chatbotData\r\n      \r\n            } catch (error) {\r\n              console.error('Error fetching chatbot data:', error);\r\n            }\r\n          }\r\n      \r\n          fetchChatbotData();\r\n        }, [chatbotId]);\r\n        const { removeToken } = useToken();\r\n        const handleLogout = () => {\r\n          // Assuming removeToken is a function that logs the user out\r\n          removeToken(); // Call the removeToken function to log the user out\r\n      \r\n          // Redirect the user to the login page or perform other necessary actions\r\n          // For example, navigate to the login page using react-router-dom\r\n          // navigate('/login');\r\n        };\r\n        const handllog = (event) =>{  event.preventDefault();\r\n      \r\n          fetch(\"/initialpompt\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({ initprompt: '' })\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                // Handle successful response (status code 200)\r\n                // You might not need to parse JSON in this case\r\n                console.log(\"Request was successful\");\r\n              } else {\r\n                // Handle error responses or non-JSON responses\r\n                console.error(\"Request failed with status:\", response.status);\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error(\"Request error:\", error);\r\n            });\r\n        };\r\n        const [chatbotResponseReceived, setChatbotResponseReceived] = useState(false);\r\n\r\n  return (\r\n\r\n   <div className=\"dashboard-container\">\r\n     \r\n       {/* <button className=' btn btn-outline-light' style={{ position:'absolute',  top:'9%', left: '95%',zIndex:'1', fontSize: '12px' }} onClick={handleLog}> \r\n         <img   src={Logout} style={{ width: '25px', height: '25px' }} alt=\"Logout\"  /> \r\n       \r\n       </button> */}\r\n  \r\n     <div     onClick={handllog} >  <Header token={removeToken} /></div>\r\n         <div  style={{top:'8% '  , position:'absolute'}}><Sidebar/></div>\r\n    \r\n    <div class=\"col-md mb-4\">\r\n     <div   class=\"form-outline\">\r\n     <h1 class=\"mt-5\" style={{color : 'white' ,position:'absolute',  top:'3%', left:'15%',right:'53%'}}> Create your own Chatbot now ! </h1>\r\n     <div style={{border: '1px solid white',padding :'10px',top:' 15%', left: '15%' ,position:'absolute', width:'35%', height:'500px'}}>\r\n    \r\n     <input type=\"text\"  class=\"form-control form-control-lg\" value={textInput} onChange={handleTextChange}  placeholder='Chatbot name ' />\r\n     <div style={{marginTop:\"3%\"}}>\r\n     <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select your chatbot name color : </label>\r\n     <input type=\"color\"      value={color1} onChange={handleColorChange1}/></div>\r\n     \r\n     <div style={{marginTop:\"3%\"}}>\r\n     <label className='text text-light ' style={{ marginRight:\"2%\"}} > Select the sender message color : </label>\r\n     <input type=\"color\"      value={color2} onChange={handleColorChange2}/></div>\r\n     <div style={{marginTop:\"3%\"}}>\r\n     <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the chatbot message color : </label>\r\n     <input type=\"color\"      value={color3} onChange={handleColorChange3}/></div>\r\n     <div style={{marginTop:\"3%\"}}>\r\n     <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the header color : </label>\r\n     <input type=\"color\"      value={color4} onChange={handleColorChange4}/></div>\r\n     <div style={{marginTop:\"3%\"}}>\r\n     <label className='text text-light ' style={{ marginRight:\"2%\"}}> Select the body color : </label>\r\n     <input type=\"color\"      value={color5} onChange={handleColorChange5}/></div>\r\n     <input type=\"file\" accept=\".png,.jpg,.jpeg\" onChange={handleFileChange} /> \r\n      <br></br>\r\n\r\n      <textarea\r\n  value={initialPrompt}\r\n  style={{ marginTop: \"2%\" }}\r\n  placeholder=\"Chatbot function expl : I want this chatbot understand in....\"\r\n  className=\"form-control\"\r\n  id=\"exampleFormControlTextarea1\"\r\n  rows=\"3\"\r\n onChange={(e) => setInitialPrompt(e.target.value)}\r\n /><div style ={{marginTop:'10px'}}> \r\n <button className=' btn btn-outline-light' style={{ marginRight: '10px' }} onClick={handleinitprompt } title=\"By clicking on this button, the chatbot next to you will operate according to the specifications you've provided in the text. You can test and make changes on it as needed. Once everything is confirmed, you can click on 'Generate chatbot response' to finalize and create your chatbot\">save</button>\r\n\r\n    <button className=' btn btn-outline-light' onClick={handleSubmitChatForm} title=\"This is the final step! By clicking on this button, you will have your own chatbot with all the information accurately set. Please ensure that all the information is correct before proceeding.\">Generate chatbot</button></div>\r\n   \r\n    \r\n  </div>\r\n     <br></br>\r\n     </div>   </div> \r\n       \r\n    <div class=\"container py-5 \" style={{position:'absolute',  marginLeft:'60%', marginTop :'5.8%' ,maxWidth: '1500%', maxHeight:'400px' , fontSize: '120%' }}>\r\n  \r\n      <div class=\"row d-flex justify-content-center\"  className={isChatOpen ? 'chat-container' : 'chat-container minimized'}>\r\n        <div class=\"col-md-8 col-lg-6 col-xl-4\" >\r\n       \r\n          <div class=\"card\" id=\"chat1\" style={{ borderRadius: '10px'}}>\r\n            <div \r\n              class=\"card-header d-flex justify-content-between align-items-center p-3  text-white border-bottom-0\"\r\n              style={{  backgroundColor : color4}}>\r\n              <i class=\"fas fa-angle-left\"></i>\r\n              <p class=\"mb-0 fw-bold\" style={{color: color1}}>{textInput}  </p>\r\n              <i class=\"fas fa-times\"></i>\r\n              <button type=\"button\" class=\"btn-close \" aria-label=\"Close\"  onClick={handleToggleChat}></button>\r\n              \r\n\r\n            </div>\r\n            <div class=\"card-body\" style={{ backgroundColor : color5}}>\r\n            <div class=\"chat-messages\" style={{ maxHeight: '225px', height:'225px', overflowY: 'auto' }}>\r\n       \r\n              <div class=\"d-flex flex-row justify-content-start mb-4\"  >\r\n              {logoSrc ? \r\n              <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n              }\r\n                <div class=\"p-3 ms-3\" style={{ borderRadius: '15px' ,  backgroundColor: color3 , color : 'white'}}>\r\n                <p class=\"small mb-0\" style={{ color: textColorchatbot }} >Hello, Please start the changes to create your own chatbot.</p>\r\n                 </div>\r\n              </div>\r\n  \r\n              <div class=\"d-flex flex-row justify-content-end mb-4\">\r\n              <div class=\"p-3 ms-6\" style={{ borderRadius: '15px' , backgroundColor: color2 }}>\r\n                <p class=\"small mb-0\" style={{ color: textColoruser }}>This is the sender message </p>\r\n                </div>\r\n                \r\n                <img  className=\"rounded-circle bg-outline-light logo\" src={Logo} alt=\"avatar 1\" style={{width: '30px' , height: '100%'}}/>\r\n                  \r\n              </div>\r\n  \r\n              <div class=\"d-flex flex-row justify-content-start mb-4\">\r\n              {logoSrc ? \r\n              <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n              }\r\n              \r\n               <div class=\"p-3 ms-6\" style={{ borderRadius: '15px' , backgroundColor: color3 , color :textColorchatbot}}>\r\n               \r\n                  <p class=\"small mb-0\">this is your chatbot messsage </p></div>\r\n                <div class=\"ms-3\" style={{borderradius:'15px'}}>\r\n                  <div class=\"bg-image\">\r\n                    <a href=\"#!\">\r\n                      <div class=\"mask\"></div>\r\n                    </a>\r\n                    </div>\r\n                 </div>\r\n               </div>\r\n               <div id=\"responseDiv\" >\r\n               <div class=\"chat-messages\" style={{ maxHeight: '225px'}}>\r\n  {chatHistory.map((entry, index) => (\r\n    <div key={index}>\r\n      {entry.type === \"user\" && (\r\n        <div class=\"d-flex flex-row justify-content-end mb-4\">\r\n          \r\n          <div style={{ borderRadius: '15px', backgroundColor: color2,  color: textColoruser, marginRight:'2px' }} className=\"message user\">\r\n            {entry.message}</div>\r\n            {logoSrc ? \r\n          <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%', left:'2px' }}/> : <p>No logo selected</p>\r\n          }\r\n          \r\n          <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n            <div class=\"bg-image\">\r\n              <a href=\"#!\">\r\n                <div class=\"mask\"></div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {entry.type === \"chatbot\" && (\r\n        <div class=\"d-flex flex-row justify-content-start mb-4\">\r\n          {logoSrc ? \r\n          <img className=\"rounded-circle bg-outline-light logo\" src={logoSrc} alt=\"avatar 1\" style={{width:' 30px' , height: '100%' }}/> : <p>No logo selected</p>\r\n          }\r\n          <div style={{ borderRadius: '15px', backgroundColor: color3, color: textColorchatbot }} className=\"message chatbot\">\r\n          {entry.message.split('<br>').map((line, index) => (\r\n        <div key={index}>{line}</div>\r\n        \r\n      ))}\r\n    \r\n          </div>\r\n          <div class=\"ms-3\" style={{ borderradius: '15px' }}>\r\n            <div class=\"bg-image\">\r\n              <a href=\"#!\">\r\n                <div class=\"mask\"></div>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  ))}\r\n</div>\r\n</div>\r\n  \r\n    \r\n  </div> \r\n               \r\n            \r\n              \r\n              <div class=\"form-outline\">\r\n              {chatHistory.length > 0 && (!chatbotResponseReceived)&& (\r\n      <button\r\n        class=\"btn btn-outline-dark\"\r\n        id=\"receive-response-button\"\r\n        type=\"button\"\r\n        onClick={handleFormSubmit}\r\n        style={{ marginBottom: '10px' }} \r\n        disabled\r\n      >\r\n         Response ...\r\n      </button>\r\n    )}\r\n   \r\n              <textarea class=\"form-control\"  id=\"userPrompt\" value={userPrompt} onChange={(e) => setUserPrompt(e.target.value)}\r\n                rows=\"4\" placeholder='Type your message'></textarea>\r\n                <br></br>\r\n                <div class=\"input-group-append\">\r\n                 <button class=\"btn btn-outline-dark\" id=\"gpt-button\"  type=\"button\"  onClick={handleFormSubmit} >Ask Chatbot</button>\r\n                 \r\n                 \r\n                 </div>\r\n               \r\n              </div>\r\n            \r\n    \r\n  \r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n        </div>\r\n      \r\n    </div>\r\n    {loadedChatbotDetails && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control form-control-lg\"\r\n            value={loadedChatbotDetails.name}\r\n            onChange={handleTextChange}\r\n            placeholder=\"Chatbot name\"\r\n          />\r\n          <div style={{ marginTop: '3%' }}>\r\n            <label className=\"text text-light\" style={{ marginRight: '2%' }}>\r\n              Select your chatbot name color :\r\n            </label>\r\n            <input\r\n              type=\"color\"\r\n              value={color1}\r\n              onChange={handleColorChange1}\r\n            />\r\n          </div>\r\n          {/* Similar inputs for other colors */}\r\n          <textarea\r\n            value={loadedChatbotDetails.initialPrompt}\r\n            style={{ marginTop: '2%' }}\r\n            placeholder=\"Chatbot function expl : I want this chatbot understand in....\"\r\n            className=\"form-control\"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"3\"\r\n            onChange={(e) => setInitialPrompt(e.target.value)}\r\n          />\r\n          <div style={{ marginTop: '10px' }}>\r\n            <button\r\n              className=\"btn btn-outline-light\"\r\n              style={{ marginRight: '10px' }}\r\n              onClick={handleinitprompt}\r\n              title=\"Save initial prompt\"\r\n            >\r\n              Save\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-light\"\r\n              onClick={handleSubmitChatForm}\r\n              title=\"Generate chatbot\"\r\n            >\r\n              Generate chatbot\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n      \r\n</div>  \r\n   \r\n \r\n   \r\n\r\n\r\n  \r\n  )\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}